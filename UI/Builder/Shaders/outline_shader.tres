[gd_resource type="VisualShader" load_steps=7 format=3 uid="uid://st6iuup71abh"]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_rw2yl"]
parameter_name = "OutlineWidth"
hint = 2
max = 30.0
default_value_enabled = true

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_q54sp"]
parameter_name = "OutlineColor"
default_value_enabled = true

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_rekfy"]
operator = 2

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_2x3cn"]
constant = -4.0

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_c35dp"]
expanded_output_ports = [0]
input_name = "color"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_vifma"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[resource]
code = "shader_type canvas_item;
render_mode blend_mix, unshaded;

uniform vec4 OutlineColor : source_color = vec4(1.000000, 1.000000, 1.000000, 1.000000);



void fragment() {
// ColorParameter:3
	vec4 n_out3p0 = OutlineColor;


// Input:7
	vec4 n_out7p0 = COLOR;
	float n_out7p4 = n_out7p0.a;


// VectorOp:8
	vec4 n_out8p0 = n_out3p0 * n_out7p0;


// Output:0
	COLOR.rgb = vec3(n_out8p0.xyz);


}
"
graph_offset = Vector2(-553.367, 138.828)
mode = 1
flags/unshaded = true
flags/light_only = false
nodes/fragment/0/position = Vector2(-280, 340)
nodes/fragment/2/node = SubResource("VisualShaderNodeFloatParameter_rw2yl")
nodes/fragment/2/position = Vector2(-780, 0)
nodes/fragment/3/node = SubResource("VisualShaderNodeColorParameter_q54sp")
nodes/fragment/3/position = Vector2(-780, 240)
nodes/fragment/4/node = SubResource("VisualShaderNodeFloatOp_rekfy")
nodes/fragment/4/position = Vector2(-560, 500)
nodes/fragment/6/node = SubResource("VisualShaderNodeFloatConstant_2x3cn")
nodes/fragment/6/position = Vector2(-720, 540)
nodes/fragment/7/node = SubResource("VisualShaderNodeInput_c35dp")
nodes/fragment/7/position = Vector2(-820, 400)
nodes/fragment/8/node = SubResource("VisualShaderNodeVectorOp_vifma")
nodes/fragment/8/position = Vector2(-520, 300)
nodes/fragment/connections = PackedInt32Array(6, 0, 4, 1, 7, 4, 4, 0, 7, 0, 8, 1, 3, 0, 8, 0, 8, 0, 0, 0)
